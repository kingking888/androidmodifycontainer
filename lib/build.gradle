apply plugin: 'com.android.library'

Properties properties = new Properties()
def localProp = file(project.rootProject.file('local.properties'))
if (localProp.exists()) {
    properties.load(localProp.newDataInputStream())
}
def exposedVersion = properties.getProperty("exposed.version") ?: "0.3.5"

android {
    compileSdkVersion 26
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            ndkBuild {
                abiFilters "armeabi-v7a", "x86"
            }
        }
    }
//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }
    externalNativeBuild {
        ndkBuild {
            path file("src/main/jni/Android.mk")
        }
    }
    lintOptions {
        //IJobService need NewApi
        warning 'NewApi','OnClick'
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "me.weishu.exposed:exposed-core:${exposedVersion}"
    implementation files('libs/commons-text-1.6.jar')
    api 'com.google.code.gson:gson:2.7'
    implementation 'com.android.support:support-v4:26.1.0'
}

repositories {
    maven { url 'https://jitpack.io' }
}
